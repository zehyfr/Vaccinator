// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Vaccinator.Controllers;

namespace Vaccinator.Migrations
{
    [DbContext(typeof(ContextBDD))]
    [Migration("20210403104440_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Vaccinator.Models.Injection", b =>
                {
                    b.Property<string>("uuid")
                        .HasColumnType("text");

                    b.Property<DateTime>("DatePrise")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DateRappel")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Maladie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Marque")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumLot")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("StatusRappel")
                        .HasColumnType("boolean");

                    b.HasKey("uuid");

                    b.ToTable("Injections");
                });

            modelBuilder.Entity("Vaccinator.Models.Personne", b =>
                {
                    b.Property<string>("uuid")
                        .HasColumnType("text");

                    b.Property<DateTime>("ddn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<char>("sexe")
                        .HasColumnType("character(1)");

                    b.HasKey("uuid");

                    b.ToTable("Personnes");
                });

            modelBuilder.Entity("Vaccinator.Models.Injection", b =>
                {
                    b.HasOne("Vaccinator.Models.Personne", "Personne")
                        .WithMany()
                        .HasForeignKey("uuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personne");
                });
#pragma warning restore 612, 618
        }
    }
}
